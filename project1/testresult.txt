inTrain <- createDataPartition(y=d.sub$classe,p=0.1,list=FALSE)
training <- d.sub[inTrain,]
testing <- d.sub[-inTrain,]
modFit <- train(classe ~ ., method="gbm", data=training, verbose=FALSE)

qplot(predict(modFit, testing), classe, data=testing)

pred <- predict(modFit,testing)
table(pred,testing$classe)

pred    A    B    C    D    E
   A 4819  246   38   30   34
   B   71 2783  148   23   94
   C   38  244 2796  200   78
   D   62   37   43 2543  138
   E   32  107   54   98 2902
> table(pred,testing$classe)
    
70%
pred    A    B    C    D    E
   A 1621   57    1    1    3
   B   26 1028   37    9   15
   C    9   42  961   49   12
   D   14    9   27  901   14
   E    4    3    0    4 1038

10%
pred           A           B           C           D           E
   A 0.967144564 0.064383963 0.008769081 0.001382170 0.004004929
   B 0.014934289 0.856014047 0.052289704 0.008638563 0.046826864
   C 0.004579849 0.046532046 0.905813576 0.073946095 0.027418361
   D 0.008960573 0.021656424 0.026956804 0.904284727 0.035736291
   E 0.004380725 0.011413521 0.006170835 0.011748445 0.886013555
> 


70%
pred            A            B            C            D            E
   A 0.9683393070 0.0500438982 0.0009746589 0.0010373444 0.0027726433
   B 0.0155316607 0.9025460931 0.0360623782 0.0093360996 0.0138632163
   C 0.0053763441 0.0368744513 0.9366471735 0.0508298755 0.0110905730
   D 0.0083632019 0.0079016681 0.0263157895 0.9346473029 0.0129390018
   E 0.0023894863 0.0026338894 0.0000000000 0.0041493776 0.9593345656
> 


1] "1  B"
[1] "2  A"
[1] "3  B"
[1] "4  A"
[1] "5  A"
[1] "6  E"
[1] "7  D"
[1] "8  B"
[1] "9  A"
[1] "10  A"
[1] "11  B"
[1] "12  C"
[1] "13  B"
[1] "14  A"
[1] "15  E"
[1] "16  E"
[1] "17  A"
[1] "18  B"
[1] "19  B"
[1] "20  B"
> 


Approach
1.	Use the training set
2.	Split it into training / test sets
3.	Build a model on the training set
4.	Evaluate on the test set
5.	Repeat and average the estimated errors


1 is gbm
[1] "2014-07-21 02:59:37 EST"
> mod1 <- train(classe ~ ., method="gbm",  data=training, verbose=FALSE)
> Sys.time()
[1] "2014-07-21 03:14:45 EST"


2  random forest
> Sys.time()
[1] "2014-07-21 03:18:19 EST"
> mod2 <- train(classe ~ ., method="rf", data=training, trControl = trainControl(method="cv"), number=3)
> Sys.time()
[1] "2014-07-21 03:30:02 EST"
> 

pred1 <- predict(mod1, testing)
> pred2 <- predict(mod2, testing)
> qplot(pred1, pred2, colour=classe, data=testing)

> table1 <- table(pred1, testing$classe)
> table2 <- table(pred2, testing$classe)
> prop.table(table1,2)
  


qplot(pred2, colour=classe, fill=classe, data=testing)

diag1 <- diag(prop.table(table1,2))
> diag2 <- diag(prop.table(table2,2))
   
pred1           A           B           C           D           E
    A 0.972670251 0.049407115 0.001461988 0.000000000 0.002080444
    B 0.012992832 0.905138340 0.049707602 0.010886470 0.013176144
    C 0.005376344 0.038208169 0.923976608 0.066096423 0.015256588
    D 0.007616487 0.005270092 0.023391813 0.916796267 0.018723994
    E 0.001344086 0.001976285 0.001461988 0.006220840 0.950762829
> prop.table(table2,2)
     
pred2            A            B            C            D            E
    A 0.9973118280 0.0092226614 0.0000000000 0.0000000000 0.0000000000
    B 0.0013440860 0.9874835310 0.0146198830 0.0000000000 0.0000000000
    C 0.0008960573 0.0032938076 0.9809941520 0.0279937792 0.0013869626
    D 0.0000000000 0.0000000000 0.0043859649 0.9712286159 0.0027739251
    E 0.0004480287 0.0000000000 0.0000000000 0.0007776050 0.9958391123
> 